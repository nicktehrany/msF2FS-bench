#! /bin/bash

set -e

if [ $# != 2 ]; then
    echo "Usage: $0 <device (e.g., nvme0n2)> <output data_dir>"
    exit 1
fi

DEV=$1
DIR=$2

mkdir -p ${DIR}

IODEPTH=(1 2 4 8 16 32 64 128 256 512 1024)
ZONES=(1 2 3 4 5 6 7 8 9 10 11 12 13 14)

echo mq-deadline | sudo tee /sys/block/${DEV}/queue/scheduler > /dev/null

# mkdir -p ${DIR}/iodepth

# for concur_level in ${IODEPTH[@]}; do
#     echo "Running benchmark with iodepth: ${concur_level}"
#     sudo nvme zns reset-zone -a /dev/${DEV}

#     sudo ${FIO_HOME}/fio --name=iodepth-${concur_level} --filename=/dev/${DEV} --size=100% --ioengine=io_uring --fixedbufs=1 --registerfiles=1 --hipri=1 --sqthread_poll=1 --iodepth=${concur_level} --rw=write --bs=4K --direct=1 --zonemode=zbd --runtime=30s --numjobs=1 --max_open_zones=14 --group_reporting --ramp_time=10s --ioscheduler=mq-deadline --time_based --output-format=json --output=${DIR}/iodepth/${concur_level}.json
# done

mkdir -p ${DIR}/jobs

for concur_level in ${ZONES[@]}; do
    echo "Running benchmark with concurrent zones: ${concur_level}"
    sudo nvme zns reset-zone -a /dev/${DEV}

    sudo ${FIO_HOME}/fio --name=jobs-${concur_level} --filename=/dev/${DEV} --size=7% --offset_increment=7% --ioengine=io_uring --fixedbufs=1 --registerfiles=1 --hipri=1 --sqthread_poll=1 --iodepth=32 --rw=write --bs=4K --direct=1 --zonemode=zbd --runtime=30s --numjobs=${concur_level} --max_open_zones=14 --group_reporting --ramp_time=10s --ioscheduler=mq-deadline --time_based --output-format=json --output=${DIR}/jobs/${concur_level}.json
done
