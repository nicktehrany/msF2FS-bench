#! /bin/bash

set -e

if [ $# != 1 ]; then
    echo "Usage: $0 <ZNS device (e.g., nvme0n2)>"
    exit 1
fi

setup_msf2fs() {
    ZNS=$1
    MOUNT="/mnt/f2fs"

    DEV=$(sudo ../nullblk_create 512 19456)
    export DEV
    export ZNS

    sudo nvme zns reset-zone /dev/${ZNS} -a
    echo mq-deadline | sudo tee /sys/block/${ZNS}/queue/scheduler > /dev/null
    sudo env "PATH=${PATH}" mkfs.f2fs -f -m -c /dev/${ZNS} /dev/${DEV}
    sudo mkdir -p /mnt/f2fs
    sudo mount -t f2fs -o hot_data_streams=$2 -o warm_data_streams=$3 -o cold_data_streams=$4 -o stream_policy=$5 /dev/${DEV} ${MOUNT}
    sudo chown -R ${USER} /mnt/f2fs
}

cleanup() {
    sudo sync # avoid errors on busy unmount
    sudo umount /dev/${DEV}
    DEV_ID=$(echo "${DEV: -1}")
    sudo ../nullblk_delete $DEV_ID
}

ZNS=$1
export ZNS

policy="spf"

DIR=data-${policy}

mkdir -p ${DIR}

echo "Running benchmark with 9 streams (${policy}) and 1 hot files"
setup_msf2fs ${ZNS} 9 1 1 ${policy}
sudo env "NUMJOBS=1" "NRFILES=1" ${FIO_HOME}/fio --output-format=json --output=${DIR}/read-latency-1.json job.fio
cleanup

echo "Running benchmark with 9 streams (${policy}) and 10 hot files"
setup_msf2fs ${ZNS} 9 1 1 ${policy}
sudo env "NUMJOBS=10" "NRFILES=1" ${FIO_HOME}/fio --output-format=json --output=${DIR}/read-latency-10.json job.fio
cleanup

echo "Running benchmark with 9 streams (${policy}) and 50 hot files"
setup_msf2fs ${ZNS} 9 1 1 ${policy}
sudo env "NUMJOBS=10" "NRFILES=5" ${FIO_HOME}/fio --output-format=json --output=${DIR}/read-latency-50.json job.fio
cleanup

echo "Running benchmark with 9 streams (${policy}) and 100 hot files"
setup_msf2fs ${ZNS} 9 1 1 ${policy}
sudo env "NUMJOBS=10" "NRFILES=10" ${FIO_HOME}/fio --output-format=json --output=${DIR}/read-latency-100.json job.fio
cleanup
