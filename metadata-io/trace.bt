/*
 *
 * Trace I/O activity for (ms)F2FS metadata on SIT, NAT, and SSA
 * with the 19G nullblk device (nullb0)
 *
 */
#include <linux/blkdev.h>
#include <linux/blk-mq.h>
#include <linux/nvme.h>

k:submit_bio / ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name == str("nullb0") / {
    $cmd = (((struct bio *)arg1)->bi_opf & 0x99);
    $secnum = ((struct request *)arg1)->__sector;
    $data_len = (((struct request *)arg1)->__data_len >> 9); // 512B LBAF

    if ($cmd == REQ_OP_WRITE) {
        /* SIT I/O */
        if ($secnum > 0xc0400 && secnum < 0xe2000) {
            @sit_counter++;
            @sit_data = @sit_data + $data_len; 
        } 

        /* NAT I/O */
        if ($secnum > 0xe2000 && secnum < 0xf1000) {
            @nat_counter++;
            @nat_data = @nat_data + $data_len; 
        } 

        /* SSA I/O */
        if ($secnum > 0xf1000) {
            @ssa_counter++;
            @ssa_data = @ssa_data + $data_len; 
        } 
    }
}

k:submit_bio_noacct / ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name == str("nullb0") / {
    $cmd = (((struct bio *)arg1)->bi_opf & 0x99);
    $secnum = ((struct request *)arg1)->__sector;
    $data_len = (((struct request *)arg1)->__data_len >> 9); // 512B LBAF

    if ($cmd == REQ_OP_WRITE) {
        /* SIT I/O */
        if ($secnum > 0xc0400 && secnum < 0xe2000) {
            @sit_counter++;
            @sit_data = @sit_data + $data_len; 
        } 

        /* NAT I/O */
        if ($secnum > 0xe2000 && secnum < 0xf1000) {
            @nat_counter++;
            @nat_data = @nat_data + $data_len; 
        } 

        /* SSA I/O */
        if ($secnum > 0xf1000) {
            @ssa_counter++;
            @ssa_data = @ssa_data + $data_len; 
        } 
    }
}
